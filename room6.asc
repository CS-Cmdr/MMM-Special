// Flur im ersten Stock

/****************************
*   Raum-Funktionen
****************************/

bool tuer_britney_verschlossen = false;
bool bei_britney_gewesen = false;

function tuer_britney_schliessen(bool schliessen)
{
  oTuer01.Visible = !schliessen;
  if(schliessen)Door[eTuerBritneysZimmer].i_GlobalInt = 0;
  else Door[eTuerBritneysZimmer].i_GlobalInt = 1;
}

function tuer_bad_schliessen()
{
  oTuer04.Visible = false;
  Door[eTuerBadezimmer].i_GlobalInt = 0;
}


function room_Load()
{
  Door[eTuerBritneysZimmer].Init(oTuer01, hTuer01);
  Door[eTuerBernardsZimmer].Init(oTuer02, hTuer02);
  Door[eTuerSchlafzimmer].Init(oTuer03, hTuer03);
  Door[eTuerBadezimmer].Init(oTuer04, hTuer04);
  
  if(EPISODE==1)
  {
    if (player.PreviousRoom == 7 && cBritney.Room == 7 )
    {
      tuer_britney_schliessen(true);
    }
    else if(bei_britney_gewesen && player.PreviousRoom!=7 && player.PreviousRoom!=8)
    {
      cBritney.ChangeRoom(8);
      tuer_britney_verschlossen = true;
      tuer_bad_schliessen();
      tuer_britney_schliessen(true);
    }
  }
}

function room_AfterFadeIn()
{
  if(EPISODE==1)
  {
    if(player.PreviousRoom==7 )
    {
      if(!bei_britney_gewesen)
      {
        player.FaceDirection(eDirectionDown);
        Wait(50);
        player.Say("Ok, jetzt reicht's.");
        player.Say("Das verlangt nach Rache!");
        player.Say("Sobald sie aus ihrem Zimmer ist...");
        player.Say("...werde ich ihr Bett unordentlich machen!");
        bei_britney_gewesen = true;
      }
      else player.FaceDirection(eDirectionRight);
      SetGuiVisible(true);
    }
    else if(cBritney.Room==8)
    {
      PlayAmbientSound (1, 12, 100, 80, 131);
    }
  }
}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(any_click_move(Door[eTuerBritneysZimmer].i_XPosition, Door[eTuerBritneysZimmer].i_YPosition, eDirectionLeft))
  {
    if(EPISODE == 1 && UsedAction(eActUseInventory))
    {
      if(cBritney.Room==7)
      {
        player.Say("Besser nicht. Britney ist noch in ihrem Zimmer.");
      }
      else if(player.ActiveInventory==iKerze)
      {
        switch(g1_kerzeStatus)
        {
          case 0:
            player.Say("Das Wachs ist viel zu hart um einen Abdruck zu machen.");
            break;
          case 1:
            iKerze.Graphic = eIKerzeSchluessel;
            PlaySound(77);
            player.Say("Ich habe einen Abdruck vom Türschloss gemacht.");
            g1_kerzeStatus = 2;
            break;
          case 2:
            player.Say("Das Wachs ist viel zu weich.");
            break;
          case 3:
            tuer_britney_verschlossen = false;
            PlaySound(2);
            tuer_britney_schliessen(false);
            player.Say("Es hat funktioniert!");
        }
      }
      else player.Say("Das ist als Schlüssel ungeeignet.");
    }
    else if(tuer_britney_verschlossen)
    {
      if(UsedAction(eActOpen))
      {
        Wait (5);
        player.Say("Abgeschlossen.");
        player.Say("Wenn ich nur einen Schlüssel hätte...");
      }
      else if(Door[eTuerBritneysZimmer].Click()==0) Unhandled();
    }
    else if(Door[eTuerBritneysZimmer].Click()==0) Unhandled();
  }
}

function hTuer02_AnyClick()
{
  if(Door[eTuerBernardsZimmer].Click()==0) Unhandled();
}

function hTuer03_AnyClick()
{
  if(Door[eTuerSchlafzimmer].Click()==0) Unhandled();
}

function hTuer04_AnyClick()
{
  if(any_click_move(Door[eTuerBadezimmer].i_XPosition, Door[eTuerBadezimmer].i_YPosition, eDirectionUp))
  {
    if(EPISODE == 1 && cBritney.Room == 8)
    {
      if(UsedAction(eActLookAt) || UsedAction(eActOpen))
      {
        Wait (5);
        player.Say("Abgeschlossen.");
        player.Say("Anscheinend nimmt Britney ein Bad. Das ist meine Chance!");
      }
      else if(UsedAction(eActUseInventory) && player.ActiveInventory == iKerze)
      {
        if(g1_kerzeStatus == 0)
        {
          player.Say("Von diesem Türschloss brauche ich keinen Abdruck.");
        }
        else
        {
          player.Say("Britney würde mich töten!");
        }
      }
      else if(Door[eTuerBadezimmer].Click()==0) Unhandled();
    }
    else if(Door[eTuerBadezimmer].Click()==0) Unhandled();
  }
}

/****************************
*   Hotspot-Funktionen
****************************/

function hLuke_AnyClick()
{
  if (any_click_move(235, 130, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Luke zum Dachboden.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Da komme ich nicht ran.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich sie öffnen, oder schliessen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Da komme ich nicht ran.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Da komme ich nicht ran.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da komme ich nicht ran.");
		}
		else if (UsedAction(eActUseInventory) && player.ActiveInventory == iLukenoeffner)
		{
      Wait(5);
      player.LoseInventory(iLukenoeffner);
      Wait(20);
      PlaySound(72);
      oLuke.Visible = true;
      oKlappe.Visible = true;
      oLeiter.Visible = true;
      Wait(20);
      player.AddInventory(iLukenoeffner);
      Wait(10);
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hTreppe_AnyClick()
{
  if (any_click_move(190, 120, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo) || UsedAction(eActUse))
		{
      Wait(5);
			player.ChangeRoom(11, 255, 77, eDirectionLeft);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Treppe nach unten.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt keine Treppe.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich kann doch keine Treppe öffnen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Ich kann die Treppe nicht schliessen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
****************************/

function oLuke_AnyClick()
{
  if (any_click_move(235, 130, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
      Wait(5);
			player.ChangeRoom(10, 230, 130);
      player.FaceDirection(eDirectionLeft);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es zum Dachboden.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich kann die Luke nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.ChangeRoom(10, 230, 130);
      player.FaceDirection(eDirectionLeft);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Die ist schon offen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(20);
      PlaySound(72);
      oKlappe.Visible = false;
      oLeiter.Visible = false;
      oLuke.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function oLeiter_AnyClick()
{
  if (any_click_move(235, 130, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
      //Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es zum Dachboden.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die Leiter ist festgeschraubt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.ChangeRoom(10, 230, 130);
      player.FaceDirection(eDirectionLeft);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ist schon offen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(20);
      PlaySound(72);
      oKlappe.Visible = false;
      oLeiter.Visible = false;
      oLuke.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(20);
      PlaySound(72);
      oKlappe.Visible = false;
      oLeiter.Visible = false;
      oLuke.Visible = false;
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

