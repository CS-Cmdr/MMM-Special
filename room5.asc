// Bernards Zimmer

/****************************
*   Raum-Funktionen
****************************/
bool first = true;

function room_Load()
{
  aMusic6.Play();
  Door[eTuerBernardsZimmer].Init(oTuer01, hTuer01);
  oComputer.SetView(57, 0, 0);
  oComputer.Animate(0, 9, eRepeat, eNoBlock);
  oPerpetuumMobile.SetView(56, 0, 0);
  oPerpetuumMobile.Animate(0, 7, eRepeat, eNoBlock);
  
  if(first)
  {
    first = false;
    if(EPISODE==1)
    {
      oPortemonnaie.Visible = true;
    }
  }
}

function room_AfterFadeIn()
{

}

function room_FirstLoad()
{
  if(EPISODE==1)
  {
    Cutscene();
    player.Say("Ferien!");
    Wait(10);
    player.FaceDirection(eDirectionLeft);
    Wait(10);
    player.Say("Zwei Monate keine Schule...");
    player.Say("...und keine unangekündigten Physik-Klausuren.");
    Wait(10);
    player.FaceDirection(eDirectionDown);
    Wait(10);
    player.Say("Wie wird mir das fehlen!");
    Wait(10);
    EndeCutscene();
    aMusic1.PlayChannel(0);
  }
}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerBernardsZimmer].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hDiplom_AnyClick()
{
  if (any_click_move(175, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("'Gewinner des Eierkopfpreises.'");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich lass es wo es ist.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich will es nicht beschädigen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich kann es nicht öffnen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Ich kann es nicht schliessen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lass es wo es ist.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lass es wo es ist.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Unhandled();
  }
}

function hBuecher_AnyClick()
{
  if (any_click_move(220, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Lieblingsbücher.");
      Wait(10);
      player.FaceDirection(eDirectionDown);
      player.Say("Von Physik bis Astronomie ist alles dabei.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Oh, die kenne ich schon auswendig.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich kenne alle Bücher auswendig.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich will jetzt nicht lesen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Geschlossene Lektüre.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie sind.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie sind.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hChuck_AnyClick()
{
  if (any_click_move(75, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein 'Geschenk' von Dr. Fred.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt da stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich vergreife mich nicht an wehrlosen Pflanzen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es ist nur eine Pflanze.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es ist nur eine Pflanze.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie ist.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie ist.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hBett_AnyClick()
{
  if (any_click_move(220, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Bettdecke liegt mathematisch genau ... ");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt da stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Noch zu viele Photonen im Raum.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Die Decke liegt gerade so schön.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Das bleibt da stehen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Das bleibt da stehen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hFenster01_AnyClick()
{
  if (any_click_move(120, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann Hoagies Haus sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schliessen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das ist kein echtes Fenster.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hFenster02_AnyClick()
{
  if (any_click_move(275, 130, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein guter Tag für die Photosynthese.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schliessen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Nein. Ich könnte herausfallen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hSchubladeR_AnyClick()
{
  if (any_click_move(120, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Sie ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeR.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Sie ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeR.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich kann sie nicht weiter rein drücken.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit kann ich die Schublade nicht öffnen.");
		}
		else Unhandled();
  }
}

function hSchubladeL_AnyClick()
{
  if (any_click_move(80, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Sie ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeL.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Sie ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeL.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich kann sie nicht weiter rein drücken.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit kann ich die Schublade nicht öffnen.");
		}
		else Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
****************************/

function oComputer_AnyClick()
{
  if (any_click_move(90, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
      player.FaceDirection(eDirectionDown);
			Wait(5);
			player.Say("Wir beide haben schon eine Menge Adventures erlebt!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist doch kein Laptop.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Der funktioniert im Moment nicht.");
      player.FaceDirection(eDirectionDown);
      Wait(5);
      player.Say("Ich habe Doors XP installiert.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der hat ein geschlossenes Gehäuse.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich will ihn nicht verschieben.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich will ihn nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Unhandled();
  }
}

bool first_schublade = true;
bool kugelschreiber_rechts = false;
bool kugelschreiber_links = false;

function oSchubladeL_AnyClick()
{
  if (any_click_move(80, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
      if(EPISODE==1 && first_schublade)
      {
        player.Say("Leer.");
        first_schublade = false;
        kugelschreiber_rechts = true;
      }
      else if(kugelschreiber_links)
      {
        player.Say("Ein Kugelschreiber. Den kann ich bestimmt gebrauchen.");
        nimm(null, iKugelschreiber);
        kugelschreiber_links = false;
      }
			else player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Sie ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oSchubladeL.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Ich will sie nicht raus reissen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      aSound5.Play();
      oSchubladeL.Visible = false;
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da rein tun.");
		}
		else Unhandled();
  }
}

function oSchubladeR_AnyClick()
{
  if (any_click_move(120, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
      if(EPISODE==1 && first_schublade)
      {
        player.Say("Leer.");
        first_schublade = false;
        kugelschreiber_links = true;
      }
      else if(kugelschreiber_rechts)
      {
        player.Say("Ein Kugelschreiber. Den kann ich bestimmt gebrauchen.");
        nimm(null, iKugelschreiber);
        kugelschreiber_rechts = false;
      }
			else player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Sie ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oSchubladeR.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Ich will sie nicht raus reissen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      aSound5.Play();
      oSchubladeR.Visible = false;
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da rein tun.");
		}
		else Unhandled();
  }
}

function oPerpetuumMobile_AnyClick()
{
  if (any_click_move(175, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Arbeit für Jugend forscht.");
      player.FaceDirection(eDirectionDown);
      Wait(5);
      player.Say("Es hört einfach nicht auf, sich zu drehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Im Moment brauche ich keine unerschöpfliche Energiequelle.");
      player.FaceDirection(eDirectionDown);
      Wait(5);
      player.Say("Vielleicht später.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich möchte im Moment nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich jetzt nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Unhandled();
  }
}

function oKissen_AnyClick()
{
  if (any_click_move(240, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Kissen liegt exakt parallel zur Bettkante.");
		}
		else if (UsedAction(eActPickUp))
		{
      Wait(5);
      if(EPISODE == 1)
      {
        player.Say("Mein Kissen liegt exakt parallel zur Bettkante.");
        player.Say("Ein Aufnehmen würde diese Perfektion zerstören.");
      }
      else
      {
        nimm(oKissen, iKissen);
      }
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich möchte im Moment nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich jetzt nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es liegt bereits exakt parallel zur Bettkante.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Unhandled();
  }
}

function oPortemonnaie_AnyClick()
{
  if (any_click_move(120, 130, eDirectionUp))
	{
    if(UsedAction(eActLookAt))
    {
      player.Say("Mein Portemonnaie.");
    }
    else if(UsedAction(eActPickUp))
    {
      player.greife();
      Wait (5);
      PlaySound(84);
      oPortemonnaie.Visible = false;
      oPortemonnaie2.Visible = true;
      player.Say("Verdammter Mist!");
      player.Say("Das Portemonnaie ist mir hinter den Schreibtisch gefallen.");
      Wait(5);
      player.FaceDirection(eDirectionDown);
      Wait(5);
      player.Say("Ich muss dringend an meiner Auge-Hand Koordination arbeiten.");
    }
    else Unhandled();
  }
}



function oPortemonnaie2_AnyClick()
{
  if (any_click_move(120, 130, eDirectionUp))
	{
    if(UsedAction(eActLookAt))
    {
      player.Say("Mein Portemonnaie.");
    }
    else if(UsedAction(eActPickUp))
    {
      player.Say("Da komme ich nicht ran.");
    }
    else if(UsedAction(eActUseInventory) && player.ActiveInventory==iStaubsauger)
    {
      //TODO Nimm-Animation Start
      Wait (5);
      PlaySound (11);
      Wait(90);
      oPortemonnaie2.Visible = false;
      //TODO Nimm-Animation Ende
      player.Say("Erwischt!");
      player.LoseInventory(iStaubsauger);
      player.AddInventory(iPortemonaie);
    }
    else Unhandled();
  }
}
