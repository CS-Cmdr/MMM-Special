// Britneys Zimmer

/****************************
*   Raum-Funktionen
****************************/

bool buch_da = true;
bool first = false;

function rausschmiss()
{
  player.ChangeRoom(6, Door[eTuerBritneysZimmer].i_XPosition, Door[eTuerBritneysZimmer].i_YPosition);
}

function room_Load()
{
  Door[eTuerBritneysZimmer].Init(oTuer01, hTuer01);
  
  if(EPISODE == 1 )
  {
    if(buch_da) oBuch.Visible = true;
    if(cBritney.Room==7)
    {
      SetGuiVisible(false);
    }
  }
}

function room_AfterFadeIn()
{
  if(EPISODE==1 && !first && cBritney.Room == 7)
  {
    Wait(15);
    cBritney.Say("RAUS HIER!");
    Wait(15);
    cBernard.Say("Bin schon weg."); 
    PlaySound(3);
    rausschmiss();
  }
}

function room_FirstLoad()
{
  if(EPISODE==1 && cBritney.Room==7)
  {
    Wait(10);
    cBritney.FaceCharacter(cBernard);
    Wait(10);  
    cBritney.Say("Verzieh dich, Bernard!");
    first = false;
    dEpisode1.Start();
  }
}

function room_Leave()
{

}

function on_call(int i)
{
  if(i==1)//Episode 1 Post-Dialog
  {
    cBritney.Walk(230,131,eBlock);
    cBritney.Say("Bitte schön.");
    cBernard.Say("Oh, toll! Eine Einladung für ein Hawking Symposium!");
    Wait(50);
    cBernard.Say("Moment mal!");
    cBernard.Say("Der Brief ist ja ein halbes Jahr alt!");
    cBritney.Say("Muss ich wohl vergessen haben dir zu geben.");
    cBernard.Say("Das hast du doch mit Absicht gemacht!");
    cBritney.Say("Stimmt. Aber nimm's nicht persönlich, Kleiner.");
    cBritney.Say("Und jetzt raus hier!");
    PlaySound(3);
    player.AddInventory(iBrief);
    player.AddInventory(iEinladung);
    rausschmiss();
  }
}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerBritneysZimmer].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hSpiegel_AnyClick()
{
  if (any_click_move(60, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Britney's Spiegel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Spiegel.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich habe nie besser ausgesehen. Leider.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Den kann man nicht öffnen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hKlSchrank_AnyClick()
{
  if (any_click_move(60, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Lila. Warum muss es immer Lila sein?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Jetzt nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich wühle nicht in ihrer Unterwäsche.");
      Wait(10);
      player.FaceDirection(eDirectionDown);
      Wait(10);
      player.Say("Nicht mehr.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hKommode_AnyClick()
{
  if (any_click_move(190, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Lila. Warum muss es immer Lila sein?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Jetzt nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Da ist nur uninteressanter Frauenkram drin.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Sie bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Sie bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hKleiderschrank_AnyClick()
{
  if (any_click_move(245, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Lila. Warum muss es immer Lila sein?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Jetzt nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Nein. Ihre Kleider würden mir sowieso nicht passen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Er bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Er bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hBett_AnyClick()
{
  if (any_click_move(160, 130, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sieht ziemlich abgenutzt aus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Keine Chance. Wer weiß, wer da schon alles lag.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Nein. Ich fasse es nicht an.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Nein. Ich fasse es nicht an.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hFenster_AnyClick()
{
  if (any_click_move(20, 135, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das Beste an Britneys Zimmer ist die Aussicht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schliessen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Nein. Ich könnte herausfallen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
****************************/



function oBuch_AnyClick()
{
  if(any_click_move(150, 126, eDirectionLeft))
  {
    if(UsedAction(eActLookAt))
    {
      player.Say("Oh, das sieht ganz interessant aus.");
    }
    else if(UsedAction(eActPickUp))
    {
      nimm(oBuch,  iTagebuch);
    }
    else Unhandled();
  }
}
